{"ast":null,"code":"// Configuração para EmailJS\n// Substitua estas informações pelas suas credenciais do EmailJS\nconst SERVICE_ID = 'seu_service_id'; // Ex: service_abc123\nconst TEMPLATE_ID = 'seu_template_id'; // Ex: template_xyz789\nconst USER_ID = 'seu_user_id'; // Ex: user_987xyz\n\n// Função para enviar o email\nexport const sendEmail = async formData => {\n  try {\n    // Para usar EmailJS, você precisará instalar o pacote e importá-lo:\n    // npm install @emailjs/browser\n    // import emailjs from '@emailjs/browser';\n    // emailjs.init(USER_ID);\n\n    // Simulação do envio de email (remova este código ao implementar o EmailJS real)\n    console.log('Simulando envio de email com os dados:', formData);\n\n    // Descomente o código abaixo e remova a simulação quando estiver pronto para implementar\n    /*\r\n    const response = await emailjs.send(SERVICE_ID, TEMPLATE_ID, {\r\n      from_name: formData.name,\r\n      reply_to: formData.email,\r\n      subject: formData.subject,\r\n      message: formData.message\r\n    });\r\n    \r\n    console.log('Email enviado com sucesso!', response.status, response.text);\r\n    */\n\n    // Simulando um envio bem-sucedido\n    return true;\n  } catch (error) {\n    console.error('Erro ao enviar email:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["SERVICE_ID","TEMPLATE_ID","USER_ID","sendEmail","formData","console","log","error"],"sources":["C:/Users/Wesley/Desktop/FASTTECH/clinica teste/src/utils/emailService.ts"],"sourcesContent":["import { FormData } from '../types';\r\n\r\n// Configuração para EmailJS\r\n// Substitua estas informações pelas suas credenciais do EmailJS\r\nconst SERVICE_ID = 'seu_service_id'; // Ex: service_abc123\r\nconst TEMPLATE_ID = 'seu_template_id'; // Ex: template_xyz789\r\nconst USER_ID = 'seu_user_id'; // Ex: user_987xyz\r\n\r\n// Função para enviar o email\r\nexport const sendEmail = async (formData: FormData): Promise<boolean> => {\r\n  try {\r\n    // Para usar EmailJS, você precisará instalar o pacote e importá-lo:\r\n    // npm install @emailjs/browser\r\n    // import emailjs from '@emailjs/browser';\r\n    // emailjs.init(USER_ID);\r\n    \r\n    // Simulação do envio de email (remova este código ao implementar o EmailJS real)\r\n    console.log('Simulando envio de email com os dados:', formData);\r\n    \r\n    // Descomente o código abaixo e remova a simulação quando estiver pronto para implementar\r\n    /*\r\n    const response = await emailjs.send(SERVICE_ID, TEMPLATE_ID, {\r\n      from_name: formData.name,\r\n      reply_to: formData.email,\r\n      subject: formData.subject,\r\n      message: formData.message\r\n    });\r\n    \r\n    console.log('Email enviado com sucesso!', response.status, response.text);\r\n    */\r\n    \r\n    // Simulando um envio bem-sucedido\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Erro ao enviar email:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"AAEA;AACA;AACA,MAAMA,UAAU,GAAG,gBAAgB,CAAC,CAAC;AACrC,MAAMC,WAAW,GAAG,iBAAiB,CAAC,CAAC;AACvC,MAAMC,OAAO,GAAG,aAAa,CAAC,CAAC;;AAE/B;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAkB,IAAuB;EACvE,IAAI;IACF;IACA;IACA;IACA;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,QAAQ,CAAC;;IAE/D;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}